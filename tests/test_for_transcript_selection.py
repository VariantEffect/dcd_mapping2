import pytest
from mavedb_mapping.metadata_process import metadata_obtain
from mavedb_mapping.blat_alignment import mave_to_blat
from mavedb_mapping.transcript_selection import main
from mavedb_mapping import data_file_path

# Data generated by notebooks
transcripts_dict = {
    "urn:mavedb:00000041-a-1": ["NP_938033.1", "NM_198291.3"],
    "urn:mavedb:00000041-b-1": ["NP_938033.1", "NM_198291.3"],
}


@pytest.fixture(
    params=[
        "urn:mavedb:00000041-a-1",
        "urn:mavedb:00000041-b-1",
    ]
)
def transcript_selection_dict(request):
    """Fixture to return dictionary after transcript selection"""
    urn = request.param
    file_path = f"{data_file_path}{urn}"
    with open(file_path) as scoreset:
        mave_dat = metadata_obtain(scoreset)
    mave = mave_to_blat(mave_dat)
    tr = main(mave, mave_dat)
    return tr


def test_for_refseq_id(transcript_selection_dict):
    """Test to compare computed values of RefSeq Protein and Nucleotide ID with those obtained by the notebooks"""
    urn = transcript_selection_dict["urn"]
    # Checking for RefSeq protien ID
    computed_prot = transcript_selection_dict["RefSeq_prot"]
    assert computed_prot == transcripts_dict[urn][0]

    # Checking for RefSeq Nucleotide ID
    computed_nuc = transcript_selection_dict["RefSeq_nuc"]
    assert computed_nuc == transcripts_dict[urn][1]
